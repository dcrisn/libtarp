!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DLL_count	dllist.c	/^size_t DLL_count(const struct dllist *dll){$/;"	f
DLL_destroyer__	dllist.c	/^static void DLL_destroyer__(struct dlnode *node, bool free_data){$/;"	f	file:
DLL_dynamic_destroy	dllist.c	/^void DLL_dynamic_destroy(struct dllist **dll, bool free_data){$/;"	f
DLL_dynamic_init	dllist.c	/^void DLL_dynamic_init(struct dllist **dll){$/;"	f
DLL_empty	dllist.c	/^bool DLL_empty(const struct dllist *dll){$/;"	f
DLL_find	dllist.c	/^struct dlnode *DLL_find(struct dllist *dll, char *k){$/;"	f
DLL_foreach	dllist.c	/^struct dlnode *DLL_foreach(struct dllist *dll, $/;"	f
DLL_get_nth	dllist.c	/^struct dlnode *DLL_get_nth(struct dllist *dll, int index){$/;"	f
DLL_head	dllist.c	/^struct dlnode *DLL_head(struct dllist *dll){$/;"	f
DLL_iterate	dllist.c	/^void *DLL_iterate(struct dllist *dll, struct dlnode **ref, int direction){$/;"	f
DLL_next	dllist.c	/^struct dlnode *DLL_next(struct dlnode **ref){$/;"	f
DLL_prev	dllist.c	/^struct dlnode *DLL_prev(struct dlnode **ref){$/;"	f
DLL_static_destroy	dllist.c	/^void DLL_static_destroy(struct dllist *dll, bool free_data){$/;"	f
DLL_static_init	dllist.c	/^void DLL_static_init(struct dllist *dll){$/;"	f
DLL_tail	dllist.c	/^struct dlnode *DLL_tail(struct dllist *dll){$/;"	f
_MODS_DOUBLY_LINKED_LIST_	dllist.h	2;"	d
count	dllist.h	/^    ssize_t count;$/;"	m	struct:dllist
current	dllist.h	/^    struct dlnode *current; \/\/ for iteration$/;"	m	struct:dllist	typeref:struct:dllist::dlnode
dllist	dllist.h	/^struct dllist{$/;"	s
dlnode	dllist.h	/^struct dlnode{$/;"	s
head	dllist.h	/^    struct dlnode *head;$/;"	m	struct:dllist	typeref:struct:dllist::dlnode
key	dllist.h	/^    char *key;$/;"	m	struct:dlnode
next	dllist.h	/^    struct dlnode *next;$/;"	m	struct:dlnode	typeref:struct:dlnode::dlnode
previous	dllist.h	/^    struct dlnode *previous;$/;"	m	struct:dlnode	typeref:struct:dlnode::dlnode
tail	dllist.h	/^    struct dlnode *tail;$/;"	m	struct:dllist	typeref:struct:dllist::dlnode
value	dllist.h	/^    void *value;   \/\/ can point to anything$/;"	m	struct:dlnode
